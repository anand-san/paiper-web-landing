---
import BlurFade from "@/components/ui/blur-fade";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import BaseLayout from "../layouts/BaseLayout.astro";
import { Input } from "@/components/ui/input";
import Particles from "@/components/ui/particles";
import { Button } from "@/components/ui/button";
---

<!doctype html>
<html lang="en">
  <BaseLayout title={SITE_TITLE} description={SITE_DESCRIPTION}>
    <main class="flex items-center justify-center h-screen">
      <div class="text-center max-w-sm md:max-w-lg lg:max-w-xl xl:max-w-3xl">
        <BlurFade delay={0.25} inView client:load>
          <h1
            class="text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-bold mb-2 md:mb-4"
          >
            Stop Drowning in Papers
          </h1>
        </BlurFade>
        <BlurFade delay={0.25 * 2} inView client:load>
          <h1
            class="text-3xl md:text-4xl lg:text-5xl xl:text-6xl font-bold mb-4 md:mb-8 lg:mb-12"
          >
            Start Finding in Seconds
          </h1>
        </BlurFade>
        <BlurFade delay={0.25 * 3} inView client:load>
          <p
            class="text-sm md:text-md lg:text-lg xl:text-xl mb-8 md:mb-12 text-gray-400 mx-3 md:mx-4"
          >
            Transform your mountain of documents into an intelligent, searchable
            digital library. Never lose another important paper again. Become an
            early adopter and transform your document mess into searchable,
            actionable intelligence.
          </p>
        </BlurFade>
        <BlurFade delay={0.25 * 4} inView client:load>
          <h3 class="text-xl md:text-2xl xl:text-3xl font-bold mb-6">
            Sign up for early Access
          </h3>
        </BlurFade>
        <BlurFade delay={0.25 * 5} inView client:load>
          <form
            id="emailForm"
            class="flex gap-1 flex-col md:flex-row justify-center align-middle mx-8 md:mx-10"
          >
            <Input
              id="emailInput"
              type="email"
              placeholder="Your email address"
              className="px-4 py-2 border border-gray-200 rounded-xl focus:outline-none md:max-w-xs"
              required
            />
            <Button
              id="subscribeButton"
              type="submit"
              className="border border-gray-200 rounded-xl"
              client:load
            >
              Subscribe
            </Button>
          </form>
          <div
            id="successMessage"
            class="hidden text-green-500 text-sm md:text-md lg:text-lg xl:text-xl mt-8 mx-3 md:mx-4"
          >
            You are all set, We will reach out to you when the early access
            opens!
          </div>
          <div
            id="errorMessage"
            class="hidden text-sm md:text-md lg:text-lg xl:text-xl mt-4 text-red-400 mx-3 md:mx-4"
          >
            Could not add that email address. Please try again.
          </div>
        </BlurFade>
      </div>
      <Particles
        className="absolute inset-0"
        quantity={200}
        ease={80}
        color={"#000"}
        refresh
        client:load
      />
    </main>
  </BaseLayout>
</html>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const emailForm = document.getElementById("emailForm") as HTMLFormElement;
    const emailInput = document.getElementById(
      "emailInput",
    ) as HTMLInputElement;
    const successMessage = document.getElementById("successMessage");
    const errorMessage = document.getElementById("errorMessage");

    emailForm?.addEventListener("submit", async (event) => {
      event.preventDefault();
      const email = emailInput?.value;
      if (email) {
        try {
          errorMessage?.classList.add("hidden");

          const response = await fetch(
            `https://addearlyaccessuser-v4mpmgatrq-uc.a.run.app?email=${encodeURIComponent(email)}`,
          );
          if (response.status === 200) {
            emailForm?.classList.add("hidden");
            successMessage?.classList.remove("hidden");
          } else {
            errorMessage?.classList.remove("hidden");
            console.error("Error submitting email");
          }
        } catch (error) {
          console.error("Error:", error);
          errorMessage?.classList.remove("hidden");
        }
      }
    });
  });
</script>
